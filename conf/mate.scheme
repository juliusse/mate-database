DROP TABLE IF EXISTS user;
CREATE TABLE user (
	id INTEGER PRIMARY KEY,
	name TEXT,
	credit INTEGER DEFAULT 0,
	total_bottles INTEGER DEFAULT 0
);

DROP TABLE IF EXISTS mate_usage_log;
CREATE TABLE mate_usage_log (
	id INTEGER PRIMARY KEY,
	user_id INTEGER REFERENCES user (id)
		ON UPDATE CASCADE
		ON DELETE CASCADE,
	timestamp INTEGER default (datetime('now')),
	credit_old INTEGER,
	credit_new INTEGER
);

DROP TRIGGER IF EXISTS mate_usage_log_trigger;
CREATE TRIGGER mate_usage_log_trigger AFTER UPDATE OF total_bottles ON user FOR EACH ROW
BEGIN
	INSERT INTO mate_usage_log (user_id, credit_old, credit_new) VALUES (OLD.id, OLD.credit, NEW.credit);
END;

DROP TABLE IF EXISTS credit_payment_log;
CREATE TABLE credit_payment_log (
	id INTEGER PRIMARY KEY,
	user_id INTEGER REFERENCES user (id)
		ON UPDATE CASCADE
		ON DELETE CASCADE,
	timestamp INTEGER default (datetime('now')),
	credit_old INTEGER,
	credit_new INTEGER
);

DROP TRIGGER IF EXISTS credit_payment_log_trigger;
CREATE TRIGGER credit_payment_log_trigger AFTER UPDATE OF credit ON user FOR EACH ROW WHEN OLD.total_bottles == NEW.total_bottles
BEGIN
	INSERT INTO credit_payment_log (user_id, credit_old, credit_new) VALUES (OLD.id, OLD.credit, NEW.credit);
END;
